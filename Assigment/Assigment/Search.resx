<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        9z8NoMW6MLo9GAAAAABJRU5ErkJggg==
</value>
  </data>
</root>