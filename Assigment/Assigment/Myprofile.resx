<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Arrow.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAPJSURBVHhe3dtByAxhHMfxN0mSJEmSJMlBcpAkyUFylCRJ
        kiQHOcpBUpKD5CA5OEiSJElykhwkSZIkJ0lycJAkSZLW91e7NTt+uzvPzPPMzO6/Pof317uz877tzDzP
        /3l2qtPp5K3Hxlw2sVw4HS9wC0u72cSyIdbiD37iDGbD/d7Ys2HXBfTqE/ZhGtzvji0bds3BR2TrOXSP
        cL8/lmyYsQ35+ovrWAz3mrFiw5zbcPUDJzAL7nVjwYY5i/ANg0qXyS6417aeDY1DGFVPsAbu9a1lQ0N3
        f/2Bo0r3hytYCHec1rHhACvxC0XqO45iBtyxWsOGQ5xESL2DniTuWK1gwyFm4i1C6wFWwR2zUTYcYQN0
        rYeWhtYXMR/uuI2wYQGXULa+4gg06XLHrpUNC9AwWfODKqVLaSvc8Wtjw4LcMLlM3ccKuPdIzoYB1DOI
        Ub9xDnPh3icZGwbQgEfXdKz6jIOobdptw0AHELteYhPc+0VlwxIeIXbpUZu8LWfDEpZD7bMUpeOeRpK2
        nA1LOoaUpcfuHkS9P9iwJA1sdO2mrqdQ09adQzAbVqB+gIa8qUv3h6tQs8adR2E2rOgs6ipNu3XpaZLm
        zmUkG1akHqGmwXWW3m873PkMZcMINqPMjLFqPUTQtNuGkag11kTpHqTZ6jy48+pjw0h0AhraNlVfMHLa
        bcOI1C5vut5gC9z5Jf8HyD20oe5iGfrOr++HRK6hDaV5xRL0nV/fDwmo49N06RLQU8mdX9J/gCYv79FU
        Feo92jCS82ii9Bi8jAVw59XHhhH0dpjUXY8RtD5pw4r0kXuFOktT5d0InirbsKLUfYFsVW6W2LCClJ2h
        fN1B5XaZDUvSxy9FbzBfrzHwsRbKhiWl6A5nS4+1w4i6pGbDEmKvD2QraHYXyoYlxFohypcuqaTL6jYM
        FGuNMFsfsAPu/aKyYYAYq8TZ0ta74yjd4wtlwwBV9glkS+2zG6h986UNC9KW+hh9P+1M164T9x7J2bCA
        snuFsqV22X7UthLs2LCAUyhb2mqntQPdP9yxa2XDEfRY0oaGMqX2mIbL7riNsOEQ+rhqbS60WrEfyLHh
        EBqKhlSrdoQ5NhxADUWtxRWp3vC1VXsCHRsOULS9reHrarhjtI4NjZ0YVWqA1jJ8jcmGOdq6NmyJq/bh
        a0w2zFGH1ZVGgVr0qLxJoUk2zNBWNTfcfYZ1cK8ZKzbs0pcd8sNdzfz2otHha0w27NI3wnqVdKtak2wI
        bV7WmF0f/5v4b1FxUtgQ2mqib4lO/LfIXaivxk7UdT5YZ+ofrQQ1jEHVirUAAAAASUVORK5CYII=
</value>
  </data>
</root>