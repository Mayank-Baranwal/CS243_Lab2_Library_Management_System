<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Arrow.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>